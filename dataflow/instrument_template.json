{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "templates",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "intrumentsconsolidated",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output_teste",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tRptDt as string,\n\t\tTckrSymb as string,\n\t\tAsst as string,\n\t\tAsstDesc as string,\n\t\tSgmtNm as string,\n\t\tMktNm as string,\n\t\tSctyCtgyNm as string,\n\t\tXprtnDt as string,\n\t\tXprtnCd as string,\n\t\tTradgStartDt as string,\n\t\tTradgEndDt as string,\n\t\tBaseCd as string,\n\t\tConvsCritNm as string,\n\t\tMtrtyDtTrgtPt as string,\n\t\tReqrdConvsInd as string,\n\t\tISIN as string,\n\t\tCFICd as string,\n\t\tDlvryNtceStartDt as string,\n\t\tDlvryNtceEndDt as string,\n\t\tOptnTp as string,\n\t\tCtrctMltplr as string,\n\t\tAsstQtnQty as string,\n\t\tAllcnRndLot as string,\n\t\tTradgCcy as string,\n\t\tDlvryTpNm as string,\n\t\tWdrwlDays as string,\n\t\tWrkgDays as string,\n\t\tClnrDays as string,\n\t\tRlvrBasePricNm as string,\n\t\tOpngFutrPosDay as string,\n\t\tSdTpCd1 as string,\n\t\tUndrlygTckrSymb1 as string,\n\t\tSdTpCd2 as string,\n\t\tUndrlygTckrSymb2 as string,\n\t\tPureGoldWght as string,\n\t\tExrcPric as string,\n\t\tOptnStyle as string,\n\t\tValTpNm as string,\n\t\tPrmUpfrntInd as string,\n\t\tOpngPosLmtDt as string,\n\t\tDstrbtnId as string,\n\t\tPricFctr as string,\n\t\tDaysToSttlm as string,\n\t\tSrsTpNm as string,\n\t\tPrtcnFlg as string,\n\t\tAutomtcExrcInd as string,\n\t\tSpcfctnCd as string,\n\t\tCrpnNm as string,\n\t\tCorpActnStartDt as string,\n\t\tCtdyTrtmntTpNm as string,\n\t\tMktCptlstn as string,\n\t\tCorpGovnLvlNm as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 join(Column_1 == Asst,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tColumn_2,\n\t\tTckrSymb,\n\t\tAsst,\n\t\tSgmtNm,\n\t\tMktNm,\n\t\tSctyCtgyNm,\n\t\tXprtnDt,\n\t\tXprtnCd,\n\t\tTradgStartDt,\n\t\tTradgEndDt,\n\t\tISIN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(SctyCtgyNm) &&\r\ntoString(MktNm) ==\"FUTURE\" && toString(SgmtNm) ==\"FINANCIAL\") ~> Filter1\nFilter1 derive(code = concat(Asst,\"_\",XprtnCd,\"_\",left(XprtnDt,4),right(left(XprtnDt,7),2),right(XprtnDt,2)),\n\t\tname = concat(Asst,\" \",iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==1, \"JAN\",iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==2,\"FEV\",iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==3, \"MAR\", iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==4, 'ABR', iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==5, 'MAY', iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==6, \"JUN\",iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==7,\"JUL\",iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==8, \"AGO\", iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==9, 'SET', iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==10, 'OUT',  iif(month(toDate(XprtnDt, 'yyyy-MM-dd'))==11, 'NOV', 'DEZ' ))))))))))),right(left(XprtnDt,4),2),\" \",XprtnDt)) ~> DerivedColumn1\nDerivedColumn1 derive(Column_2 = replace(Column_2, \"$code\", code)) ~> DerivedColumn2\nDerivedColumn2 sink(input(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}
{
	"name": "AtualizaINCCM",
	"properties": {
		"activities": [
			{
				"name": "GetCotacaoAtualizada",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetDivulgacaoAtualizada",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[db_datareader].[getUltimaCotacaoSerie]",
						"storedProcedureParameters": {
							"IDSerie": {
								"type": "String",
								"value": {
									"value": "@variables('IDSerie_indice')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "rcPhoenixSAD410_ADF_Teste",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "ScrapperCalendario",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "ScrapperCalendarioDivulgacao",
					"method": "POST",
					"body": {
						"indice": "@{variables('indice')}"
					}
				},
				"linkedServiceName": {
					"referenceName": "ScrapperCalendarioIBRE",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "AtualizaBancodeDados",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ScrapperCalendario",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('ScrapperCalendario').output.inserir_no_banco,true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AtualizaCalendarioBanco",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[db_datareader].[testeInsereDataDivulgacaoIbre]",
								"storedProcedureParameters": {
									"Data": {
										"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
										"type": "String"
									},
									"DataDivulgacao": {
										"value": {
											"value": "@activity('ScrapperCalendario').output.dia",
											"type": "Expression"
										},
										"type": "String"
									},
									"Indice": {
										"value": {
											"value": "@variables('indice')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "rcPhoenixSAD410_ADF_Teste",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "GetDivulgacaoAtualizada",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AtualizaBancodeDados",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[db_datareader].[GetCalendarioDivulgacaoIbreAtualizado]",
						"storedProcedureParameters": {
							"Indice": {
								"type": "String",
								"value": {
									"value": "@variables('indice')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "rcPhoenixSAD410_ADF_Teste",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CotacaoBancoAtualizada",
				"description": "Verifica se a última cotação salva foi divulgada após a data da última divulgação.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GetCotacaoAtualizada",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(substring(replace(activity('GetDivulgacaoAtualizada').output.firstRow.DataDivulgacao,'-',''),0,8)),\nint(substring(replace(activity('GetCotacaoAtualizada').output.firstRow.Data,'-',''),0,8)))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "InsereIndiceBanco1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[db_datareader].[InsereCotacaoSerieHistorica]",
								"storedProcedureParameters": {
									"Data": {
										"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
										"type": "String"
									},
									"IDSerie": {
										"value": {
											"value": "@variables('IDSerie_indice')",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Valor": {
										"value": {
											"value": "@activity('GetCotacaoAtualizada').output.firstRow.Valor",
											"type": "Expression"
										},
										"type": "Double"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "rcPhoenixSAD410_ADF_Teste",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "EncerraPipeline",
							"description": "Não é um erro, apenas encerra o pipeline",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "InsereIndiceBanco1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "FailMessage",
								"errorCode": "ErrorCode"
							}
						}
					]
				}
			},
			{
				"name": "TentativasObtencaoIndiceNovo",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CotacaoBancoAtualizada",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@array('1,2,3')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "ScrapperInccmIBRE",
							"type": "AzureFunctionActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "ScrapperInccmIBRE",
								"method": "GET"
							},
							"linkedServiceName": {
								"referenceName": "ScrapperInccmIBRE",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "IndiceAtualizou",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "ScrapperInccmIBRE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(float(activity('ScrapperInccmIBRE').output.valor),\r\n float(activity('GetCotacaoAtualizada').output.firstRow.Valor)))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Peraiii",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 5
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "InsereIndiceBanco",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[db_datareader].[InsereCotacaoSerieHistorica]",
											"storedProcedureParameters": {
												"Data": {
													"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
													"type": "String"
												},
												"IDSerie": {
													"value": "@variables('IDSerie_indice')",
													"type": "Int32"
												},
												"Valor": {
													"value": "@activity('ScrapperInccmIBRE').output.valor",
													"type": "Double"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "rcPhoenixSAD410_ADF_Teste",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "EncerrarPipeline",
										"type": "Fail",
										"dependsOn": [
											{
												"activity": "InsereIndiceBanco",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"message": "FailMessage",
											"errorCode": "ErrorCode"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"indice": {
				"type": "String",
				"defaultValue": "INCCM"
			},
			"IDSerie_indice": {
				"type": "String",
				"defaultValue": "580040"
			}
		},
		"annotations": []
	}
}
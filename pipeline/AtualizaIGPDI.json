{
	"name": "AtualizaIGPDI",
	"properties": {
		"activities": [
			{
				"name": "GetCotacaoAtualizada",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "DiadeDivulgacao",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[db_datareader].[getUltimaCotacaoSerie]",
						"storedProcedureParameters": {
							"IDSerie": {
								"type": "String",
								"value": {
									"value": "@variables('IDSerie_indice')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "rcPhoenixSAD410_ADF_Teste",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "ScrapperCalendario",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "ScrapperCalendarioDivulgacao",
					"method": "POST",
					"body": {
						"indice": "@{variables('indice')}"
					}
				},
				"linkedServiceName": {
					"referenceName": "ScrapperCalendarioIBRE",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "AtualizaBancodeDados",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ScrapperCalendario",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('ScrapperCalendario').output.inserir_no_banco,true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AtualizaCalendarioBanco",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[db_datareader].[testeInsereDataDivulgacaoIbre]",
								"storedProcedureParameters": {
									"Data": {
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
											"type": "Expression"
										},
										"type": "String"
									},
									"DataDivulgacao": {
										"value": {
											"value": "@activity('ScrapperCalendario').output.dia",
											"type": "Expression"
										},
										"type": "String"
									},
									"Indice": {
										"value": {
											"value": "@variables('indice')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "rcPhoenixSAD410_ADF_Teste",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "GetDivulgacaoAtualizada",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AtualizaBancodeDados",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[db_datareader].[GetCalendarioDivulgacaoIbreAtualizado]",
						"storedProcedureParameters": {
							"Indice": {
								"type": "String",
								"value": {
									"value": "@variables('indice')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "rcPhoenixSAD410_ADF_Teste",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "DiadeDivulgacao",
				"description": "Verifica se hoje é dia de divulgação.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "MesDivulgacaoAtual",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('GetDivulgacaoAtualizada').output.firstRow.DataDivulgacao,\nformatDateTime(utcnow(), 'yyyy-MM-dd'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "EncerraPipeline",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('GetDivulgacaoAtualizada').output",
									"type": "Expression"
								},
								"errorCode": "Não é necessário fazer mais nada"
							}
						}
					]
				}
			},
			{
				"name": "MesDivulgacaoAtual",
				"description": "Verifica se o mês atual possui data de divulgação para o índice em questão.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GetDivulgacaoAtualizada",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(formatDateTime(utcnow(), 'MM'),\nsubstring(activity('GetDivulgacaoAtualizada').output.firstRow.DataDivulgacao,5,2))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Data de divulgação não corresponde ao atual",
								"errorCode": "Disparar email"
							}
						}
					]
				}
			},
			{
				"name": "CapturaIndice",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "GetCotacaoAtualizada",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('NovoIndice')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "ScrapperIgpIBRE",
							"type": "AzureFunctionActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "ScrapperIgpIBRE",
								"method": "POST",
								"body": {
									"indice": "@{variables('indice')}"
								}
							},
							"linkedServiceName": {
								"referenceName": "ScrapperIgpmIBRE",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "ScrapperIgpIBRE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(float(activity('ScrapperIgpIBRE').output.valor),\n float(activity('GetCotacaoAtualizada').output.firstRow.Valor)))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 10
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Stored procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[db_datareader].[InsereCotacaoSerieHistorica]",
											"storedProcedureParameters": {
												"Data": {
													"value": {
														"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
														"type": "Expression"
													},
													"type": "String"
												},
												"IDSerie": {
													"value": {
														"value": "@variables('IDSerie_indice')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"Valor": {
													"value": {
														"value": "@activity('ScrapperIgpIBRE').output.valor",
														"type": "Expression"
													},
													"type": "Double"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "rcPhoenixSAD410_ADF_Teste",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Stored procedure1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "NovoIndice",
											"value": true
										}
									}
								]
							}
						}
					],
					"timeout": "00:04:00"
				}
			},
			{
				"name": "SendEmail",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "CapturaIndice",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			}
		],
		"variables": {
			"indice": {
				"type": "String",
				"defaultValue": "IGPDI"
			},
			"IDSerie_indice": {
				"type": "String",
				"defaultValue": "30988"
			},
			"NovoIndice": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": []
	}
}